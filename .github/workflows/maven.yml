# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]



jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: re-play-420511
      SERVICE: upload-service
      PORT: 0
      REGION: europe-west4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Sets up the gcloud cli with the credentials we previously created, and will be storing within Github as secrets.
      - name: Setup Cloud cli
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build and Push Container with Jib
        run: mvn compile jib:build -Dimage=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: gohibeesh
        run: gcloud run deploy ${{env.SERVICE}} --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} --port ${{env.PORT}} --region ${{env.REGION}} --cpu=1 --memory=1Gi --timeout=3000 --allow-unauthenticated || true
      #        uses: google-github-actions/deploy-cloudrun@v0.4.0
      #        with:
      #          service: ${{ env.SERVICE }}
      #          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
      #          region: ${{ env.REGION }}
      #          port: ${{ env.PORT }}

      - name: Show Output
        run: echo ${{ steps.gohibeesh.outputs.url }}